from lib import LIBRARY
from taichi_core import *

TiNsBundle = Ptr[byte]
TiMtlDevice = Ptr[byte]
TiMtlBuffer = Ptr[byte]
TiMtlTexture = Ptr[byte]

class TiMetalRuntimeInteropInfo:
    bundle: TiNsBundle
    device: TiMtlDevice

class TiMetalMemoryInteropInfo:
    buffer: TiMtlBuffer

class TiMetalImageInteropInfo:
    texture: TiMtlTexture

def ti_import_metal_runtime(
    interop_info: Ptr[byte],
) -> TiRuntime:
    from C import LIBRARY.ti_import_metal_runtime(Ptr[byte]) -> TiRuntime
    out = ti_import_metal_runtime(interop_info)
    return TiRuntime(out)

def ti_export_metal_runtime(
    runtime: TiRuntime,
    interop_info: Ptr[byte],
) -> None:
    from C import LIBRARY.ti_export_metal_runtime(TiRuntime, Ptr[byte]) -> None
    ti_export_metal_runtime(runtime, interop_info)

def ti_import_metal_memory(
    runtime: TiRuntime,
    interop_info: Ptr[byte],
) -> TiMemory:
    from C import LIBRARY.ti_import_metal_memory(TiRuntime, Ptr[byte]) -> TiMemory
    out = ti_import_metal_memory(runtime, interop_info)
    return TiMemory(out)

def ti_export_metal_memory(
    runtime: TiRuntime,
    memory: TiMemory,
    interop_info: Ptr[byte],
) -> None:
    from C import LIBRARY.ti_export_metal_memory(TiRuntime, TiMemory, Ptr[byte]) -> None
    ti_export_metal_memory(runtime, memory, interop_info)

def ti_import_metal_image(
    runtime: TiRuntime,
    interop_info: Ptr[byte],
) -> TiImage:
    from C import LIBRARY.ti_import_metal_image(TiRuntime, Ptr[byte]) -> TiImage
    out = ti_import_metal_image(runtime, interop_info)
    return TiImage(out)

def ti_export_metal_image(
    runtime: TiRuntime,
    image: TiImage,
    interop_info: Ptr[byte],
) -> None:
    from C import LIBRARY.ti_export_metal_image(TiRuntime, TiImage, Ptr[byte]) -> None
    ti_export_metal_image(runtime, image, interop_info)